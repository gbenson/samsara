#!/usr/bin/env python

### Preamble: allow this program to be run without PYTHON_PATH abuse
import sys, os
samsara_dir = os.path.dirname(os.path.dirname(os.path.realpath(sys.argv[0])))
if samsara_dir not in sys.path:
    sys.path.insert(0, samsara_dir)
### end of preamble

from samsara.httpserver import HTTPServer
from samsara.server import SamsaraServer
import glob
import socket

hostname = socket.gethostbyaddr(socket.gethostname())[0]
if hostname == "blade.nx":
    host = ""
else:
    host = "127.0.0.1"

roots = sys.argv[1:]
if not roots:
    print >>sys.stderr, "usage: %s ROOT..."
    sys.exit(1)
if len(roots) == 1:
    paths = glob.glob(os.path.join(roots[0], "*", "[Ss]amsara"))
    if paths:
        roots = map(os.path.dirname, paths)

def capture_output(path):
    dir = os.path.dirname(path)
    if not os.path.exists(dir):
        os.makedirs(dir)
    fd = os.open(path, os.O_WRONLY | os.O_CREAT | os.O_TRUNC, 0600)
    for fp in sys.stdout, sys.stderr:
        fp.flush()
        os.dup2(fd, fp.fileno())
    # Disable stdout buffering
    sys.stdout = os.fdopen(sys.stdout.fileno(), "w", 0)

for root, needs_fork in zip(roots, [True] * (len(roots) - 1) + [False]):
    if needs_fork and os.fork():
        continue
    server = SamsaraServer(root)
    port = int(server.config.get("httpserver", "port"))
    webserver = HTTPServer((host, port), server)
    capture_output(os.path.join(server.data, "log"))
    webserver.serve_forever()
